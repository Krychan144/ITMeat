@using ITMeat.WEB.Models.Meal.FormModels
@model ITMeat.WEB.Models.Meal.FormModels.AddNewMealToOrderViewModel

<style>
    .chat_slack_button {
        border: solid !important;
        border-width: 1px !important;
        border-color: #B1B2B4 !important;
    }

    .font_black {
        color: #000 !important;
    }

    .font_white {
        color: #fff !important;
    }

    .ui.basic.add-order.modal {
        color: #fff;
    }

    .ui.basic.add-order.modal > .actions {
        border: none;
    }
</style>

<div class="ui basic add-order modal">
    <h1 class="modal-title" id="createNewChannelHeader">Add meal to Yours Orders</h1>
    <label>Choose your food, then the number, by default one. It will appear in the team order. </label>
    <br />
    <hr />
    @using (Html.BeginForm(FormMethod.Post, false, new {id = "addMealToOrderForm", @class = "ui form center aligned"}))
    {
        <div class="content">
            <div class="field">
                @Html.DropDownListFor(x => x.MealId,
                    new SelectList(
                        new List<Object>
                        {
                        }, "value", "text", 1), new {id = "newMealinOrderSelect"})
            </div>
            <div class="field">
                @Html.DropDownListFor(x => x.Quantity,
                    new SelectList(
                        new List<Object>
                        {
                            new {value = 1, text = "x1"},
                            new {value = 2, text = "x2"},
                            new {value = 3, text = "x3"},
                            new {value = 4, text = "x4"},
                            new {value = 5, text = "x5"}
                        }, "value", "text", 1))
            </div>
        </div>
        <br/>
        <hr/>
        <div class="ui buttons">
            <button class="ui button">Cancel</button>
            <div class="or"></div>
            <button class="ui positive button" type="submit">Add</button>
        </div>
    }
</div>